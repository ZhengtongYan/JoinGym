{
 "name": "cluster2b_5 low",
 "relations": [
  {"name": "chn", "aliastable": "char_name", "basetable": "char_name", "cardinality": 3.14034e+06, "unfilteredCardinality": 3.14034e+06},
  {"name": "ci", "aliastable": "cast_info", "basetable": "cast_info", "cardinality": 1.43544e+06, "unfilteredCardinality": 3.62443e+07},
  {"name": "cn", "aliastable": "company_name", "basetable": "company_name", "cardinality": 84843, "unfilteredCardinality": 234997},
  {"name": "ct", "aliastable": "company_type", "basetable": "company_type", "cardinality": 4, "unfilteredCardinality": 4},
  {"name": "mc", "aliastable": "movie_companies", "basetable": "movie_companies", "cardinality": 2.60913e+06, "unfilteredCardinality": 2.60913e+06},
  {"name": "rt", "aliastable": "role_type", "basetable": "role_type", "cardinality": 12, "unfilteredCardinality": 12},
  {"name": "t", "aliastable": "title", "basetable": "title", "cardinality": 1.74903e+06, "unfilteredCardinality": 2.52831e+06}
 ],
 "joins": [
  {"relations": ["chn", "ci"], "primaryKeySide": "chn"},
  {"relations": ["ci", "mc"]},
  {"relations": ["cn", "mc"], "primaryKeySide": "cn"},
  {"relations": ["ct", "mc"], "primaryKeySide": "ct"},
  {"relations": ["rt", "ci"], "primaryKeySide": "rt"},
  {"relations": ["t", "ci"], "primaryKeySide": "t"},
  {"relations": ["t", "mc"], "primaryKeySide": "t"}
 ],
 "sizes": [
  {"relations": ["chn", "ci"], "cardinality": 15},
  {"relations": ["ci", "mc"], "cardinality": 2.74326e+06},
  {"relations": ["ci", "rt"], "cardinality": 1.43544e+06},
  {"relations": ["ci", "t"], "cardinality": 1.07133e+06},
  {"relations": ["cn", "mc"], "cardinality": 1.1538e+06},
  {"relations": ["ct", "mc"], "cardinality": 2.60913e+06},
  {"relations": ["mc", "t"], "cardinality": 1.50813e+06},
  {"relations": ["chn", "ci", "mc"], "cardinality": 31},
  {"relations": ["chn", "ci", "rt"], "cardinality": 15},
  {"relations": ["chn", "ci", "t"], "cardinality": 12},
  {"relations": ["ci", "cn", "mc"], "cardinality": 1.21027e+06},
  {"relations": ["ci", "ct", "mc"], "cardinality": 2.74326e+06},
  {"relations": ["ci", "mc", "rt"], "cardinality": 2.74326e+06},
  {"relations": ["ci", "mc", "t"], "cardinality": 1.9427e+06},
  {"relations": ["ci", "rt", "t"], "cardinality": 1.07133e+06},
  {"relations": ["cn", "ct", "mc"], "cardinality": 1.1538e+06},
  {"relations": ["cn", "mc", "t"], "cardinality": 596250},
  {"relations": ["ct", "mc", "t"], "cardinality": 1.50813e+06},
  {"relations": ["chn", "ci", "cn", "mc"], "cardinality": 14},
  {"relations": ["chn", "ci", "ct", "mc"], "cardinality": 31},
  {"relations": ["chn", "ci", "mc", "rt"], "cardinality": 31},
  {"relations": ["chn", "ci", "mc", "t"], "cardinality": 23},
  {"relations": ["chn", "ci", "rt", "t"], "cardinality": 12},
  {"relations": ["ci", "cn", "ct", "mc"], "cardinality": 1.21027e+06},
  {"relations": ["ci", "cn", "mc", "rt"], "cardinality": 1.21027e+06},
  {"relations": ["ci", "cn", "mc", "t"], "cardinality": 782104},
  {"relations": ["ci", "ct", "mc", "rt"], "cardinality": 2.74326e+06},
  {"relations": ["ci", "ct", "mc", "t"], "cardinality": 1.9427e+06},
  {"relations": ["ci", "mc", "rt", "t"], "cardinality": 1.9427e+06},
  {"relations": ["cn", "ct", "mc", "t"], "cardinality": 596250},
  {"relations": ["chn", "ci", "cn", "ct", "mc"], "cardinality": 14},
  {"relations": ["chn", "ci", "cn", "mc", "rt"], "cardinality": 14},
  {"relations": ["chn", "ci", "cn", "mc", "t"], "cardinality": 10},
  {"relations": ["chn", "ci", "ct", "mc", "rt"], "cardinality": 31},
  {"relations": ["chn", "ci", "ct", "mc", "t"], "cardinality": 23},
  {"relations": ["chn", "ci", "mc", "rt", "t"], "cardinality": 23},
  {"relations": ["ci", "cn", "ct", "mc", "rt"], "cardinality": 1.21027e+06},
  {"relations": ["ci", "cn", "ct", "mc", "t"], "cardinality": 782104},
  {"relations": ["ci", "cn", "mc", "rt", "t"], "cardinality": 782104},
  {"relations": ["ci", "ct", "mc", "rt", "t"], "cardinality": 1.9427e+06},
  {"relations": ["chn", "ci", "cn", "ct", "mc", "rt"], "cardinality": 14},
  {"relations": ["chn", "ci", "cn", "ct", "mc", "t"], "cardinality": 10},
  {"relations": ["chn", "ci", "cn", "mc", "rt", "t"], "cardinality": 10},
  {"relations": ["chn", "ci", "ct", "mc", "rt", "t"], "cardinality": 23},
  {"relations": ["ci", "cn", "ct", "mc", "rt", "t"], "cardinality": 782104},
  {"relations": ["chn", "ci", "cn", "ct", "mc", "rt", "t"], "cardinality": 10}
 ],
 "query": "SELECT MIN(chn.name) AS character, MIN(t.title) AS movie_with_american_producer FROM char_name AS chn, cast_info AS ci, company_name AS cn, company_type AS ct, movie_companies AS mc, role_type AS rt, title AS t WHERE ci.note LIKE '%(producer)%' AND cn.country_code = '[us]' AND t.production_year > 1990 AND t.id = mc.movie_id AND t.id = ci.movie_id AND ci.movie_id = mc.movie_id AND chn.id = ci.person_role_id AND rt.id = ci.role_id AND cn.id = mc.company_id AND ct.id = mc.company_type_id;",
 "join columns": ["mc.company_type_id", "rt.id", "ci.role_id", "ct.id", "mc.movie_id", "t.id", "mc.company_id", "ci.person_role_id", "cn.id", "chn.id", "ci.movie_id"],
 "unary columns": ["rt.id", "ci.role_id", "ct.id", "ci.note", "t.id", "cn.country_code", "mc.movie_id", "mc.company_id", "ci.person_role_id", "t.production_year", "cn.id", "chn.id", "ci.movie_id"],
 "join expressions": [{"left": "t.id", "right": "mc.movie_id"}, {"left": "t.id", "right": "ci.movie_id"}, {"left": "ci.movie_id", "right": "mc.movie_id"}, {"left": "chn.id", "right": "ci.person_role_id"}, {"left": "rt.id", "right": "ci.role_id"}, {"left": "cn.id", "right": "mc.company_id"}, {"left": "ct.id", "right": "mc.company_type_id"}],
 "bushy tree min cost": "80",
 "bushy tree min order": "(company_type ct join (role_type rt join (company_name cn join (movie_companies mc join (title t join (char_name chn join cast_info ci))))))",
 "left deep tree min cost": "80",
 "left deep tree min order": "((((((char_name chn join cast_info ci) join title t) join movie_companies mc) join company_name cn) join company_type ct) join role_type rt)",
 "equal": "True",
 "adaptive": "((((((char_name chn join cast_info ci) join title t) join movie_companies mc) join company_name cn) join company_type ct) join role_type rt)",
 "dphyp": "((((((char_name chn join cast_info ci) join title t) join movie_companies mc) join company_name cn) join company_type ct) join role_type rt)",
 "genetic": "((((((char_name chn join cast_info ci) join title t) join movie_companies mc) join company_name cn) join role_type rt) join company_type ct)",
 "goo": "((((((char_name chn join cast_info ci) join title t) join movie_companies mc) join company_name cn) join role_type rt) join company_type ct)",
 "goodp": "((((((char_name chn join cast_info ci) join title t) join movie_companies mc) join company_name cn) join company_type ct) join role_type rt)",
 "goodp2": "((((((char_name chn join cast_info ci) join title t) join movie_companies mc) join company_name cn) join company_type ct) join role_type rt)",
 "gooikkbz": "((((((char_name chn join cast_info ci) join title t) join movie_companies mc) join company_name cn) join role_type rt) join company_type ct)",
 "ikkbz": "((((((char_name chn join cast_info ci) join title t) join movie_companies mc) join company_name cn) join role_type rt) join company_type ct)",
 "ikkbzbushy": "((((((char_name chn join cast_info ci) join title t) join movie_companies mc) join company_name cn) join role_type rt) join company_type ct)",
 "minsel": "((((((char_name chn join cast_info ci) join title t) join movie_companies mc) join company_name cn) join role_type rt) join company_type ct)",
 "quickpick": "((((((char_name chn join cast_info ci) join title t) join movie_companies mc) join company_name cn) join role_type rt) join company_type ct)",
 "simplification": "((((((char_name chn join cast_info ci) join title t) join movie_companies mc) join company_name cn) join company_type ct) join role_type rt)",
 "adaptive is left": "True",
 "dphyp is left": "True",
 "genetic is left": "True",
 "goo is left": "True",
 "goodp is left": "True",
 "goodp2 is left": "True",
 "gooikkbz is left": "True",
 "ikkbz is left": "True",
 "ikkbzbushy is left": "True",
 "minsel is left": "True",
 "quickpick is left": "True",
 "simplification is left": "True"
}
